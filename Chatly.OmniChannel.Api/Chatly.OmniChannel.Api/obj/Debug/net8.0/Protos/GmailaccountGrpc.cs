// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/gmailaccount.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Chatly.OmniChannel.Gmail.GServices {
  public static partial class GmailAccountSessionRpc
  {
    static readonly string __ServiceName = "GmailAccountSessionRpc";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest> __Marshaller_SessionIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> __Marshaller_GmailAccountSessionVM = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> __Marshaller_GoogleAuthUrlResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest> __Marshaller_GoogleCallbackRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> __Marshaller_GoogleCallbackResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> __Marshaller_GmailAccountSessionListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> __Method_GetSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSession",
        __Marshaller_SessionIdRequest,
        __Marshaller_GmailAccountSessionVM);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> __Method_CreateSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSession",
        __Marshaller_GmailAccountSessionVM,
        __Marshaller_GmailAccountSessionVM);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty> __Method_UpdateSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSession",
        __Marshaller_GmailAccountSessionVM,
        __Marshaller_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty> __Method_DeleteSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSession",
        __Marshaller_GmailAccountSessionVM,
        __Marshaller_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> __Method_GetGoogleLoginUrl = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGoogleLoginUrl",
        __Marshaller_Empty,
        __Marshaller_GoogleAuthUrlResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> __Method_HandleGoogleCallback = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HandleGoogleCallback",
        __Marshaller_GoogleCallbackRequest,
        __Marshaller_GoogleCallbackResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> __Method_GetAllSessions = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSessions",
        __Marshaller_Empty,
        __Marshaller_GmailAccountSessionListResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Chatly.OmniChannel.Gmail.GServices.GmailaccountReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for GmailAccountSessionRpc</summary>
    public partial class GmailAccountSessionRpcClient : grpc::ClientBase<GmailAccountSessionRpcClient>
    {
      /// <summary>Creates a new client for GmailAccountSessionRpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GmailAccountSessionRpcClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GmailAccountSessionRpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GmailAccountSessionRpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GmailAccountSessionRpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GmailAccountSessionRpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM GetSession(global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM GetSession(global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> GetSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> GetSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM CreateSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM CreateSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> CreateSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> CreateSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.Empty UpdateSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.Empty UpdateSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.Empty> UpdateSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.Empty> UpdateSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.Empty DeleteSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.Empty DeleteSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.Empty> DeleteSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.Empty> DeleteSessionAsync(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSession, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse GetGoogleLoginUrl(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGoogleLoginUrl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse GetGoogleLoginUrl(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGoogleLoginUrl, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> GetGoogleLoginUrlAsync(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGoogleLoginUrlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> GetGoogleLoginUrlAsync(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGoogleLoginUrl, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse HandleGoogleCallback(global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HandleGoogleCallback(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse HandleGoogleCallback(global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HandleGoogleCallback, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> HandleGoogleCallbackAsync(global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HandleGoogleCallbackAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> HandleGoogleCallbackAsync(global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HandleGoogleCallback, null, options, request);
      }
      /// <summary>
      /// New method added
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse GetAllSessions(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSessions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// New method added
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse GetAllSessions(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSessions, null, options, request);
      }
      /// <summary>
      /// New method added
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> GetAllSessionsAsync(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSessionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// New method added
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> GetAllSessionsAsync(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSessions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GmailAccountSessionRpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GmailAccountSessionRpcClient(configuration);
      }
    }

  }
}
#endregion
