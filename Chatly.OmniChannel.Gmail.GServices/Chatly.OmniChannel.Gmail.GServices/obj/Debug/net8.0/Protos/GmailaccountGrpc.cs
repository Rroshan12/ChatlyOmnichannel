// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/gmailaccount.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Chatly.OmniChannel.Gmail.GServices {
  public static partial class GmailAccountSessionRpc
  {
    static readonly string __ServiceName = "GmailAccountSessionRpc";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest> __Marshaller_SessionIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> __Marshaller_GmailAccountSessionVM = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> __Marshaller_GoogleAuthUrlResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest> __Marshaller_GoogleCallbackRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> __Marshaller_GoogleCallbackResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> __Marshaller_GmailAccountSessionListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> __Method_GetSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSession",
        __Marshaller_SessionIdRequest,
        __Marshaller_GmailAccountSessionVM);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> __Method_CreateSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSession",
        __Marshaller_GmailAccountSessionVM,
        __Marshaller_GmailAccountSessionVM);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty> __Method_UpdateSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSession",
        __Marshaller_GmailAccountSessionVM,
        __Marshaller_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty> __Method_DeleteSession = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSession",
        __Marshaller_GmailAccountSessionVM,
        __Marshaller_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> __Method_GetGoogleLoginUrl = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGoogleLoginUrl",
        __Marshaller_Empty,
        __Marshaller_GoogleAuthUrlResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> __Method_HandleGoogleCallback = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HandleGoogleCallback",
        __Marshaller_GoogleCallbackRequest,
        __Marshaller_GoogleCallbackResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> __Method_GetAllSessions = new grpc::Method<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSessions",
        __Marshaller_Empty,
        __Marshaller_GmailAccountSessionListResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Chatly.OmniChannel.Gmail.GServices.GmailaccountReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GmailAccountSessionRpc</summary>
    [grpc::BindServiceMethod(typeof(GmailAccountSessionRpc), "BindService")]
    public abstract partial class GmailAccountSessionRpcBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> GetSession(global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM> CreateSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.Empty> UpdateSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.Empty> DeleteSession(global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse> GetGoogleLoginUrl(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse> HandleGoogleCallback(global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// New method added
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse> GetAllSessions(global::Chatly.OmniChannel.Gmail.GServices.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GmailAccountSessionRpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSession, serviceImpl.GetSession)
          .AddMethod(__Method_CreateSession, serviceImpl.CreateSession)
          .AddMethod(__Method_UpdateSession, serviceImpl.UpdateSession)
          .AddMethod(__Method_DeleteSession, serviceImpl.DeleteSession)
          .AddMethod(__Method_GetGoogleLoginUrl, serviceImpl.GetGoogleLoginUrl)
          .AddMethod(__Method_HandleGoogleCallback, serviceImpl.HandleGoogleCallback)
          .AddMethod(__Method_GetAllSessions, serviceImpl.GetAllSessions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GmailAccountSessionRpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.SessionIdRequest, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM>(serviceImpl.GetSession));
      serviceBinder.AddMethod(__Method_CreateSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM>(serviceImpl.CreateSession));
      serviceBinder.AddMethod(__Method_UpdateSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty>(serviceImpl.UpdateSession));
      serviceBinder.AddMethod(__Method_DeleteSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionVM, global::Chatly.OmniChannel.Gmail.GServices.Empty>(serviceImpl.DeleteSession));
      serviceBinder.AddMethod(__Method_GetGoogleLoginUrl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GoogleAuthUrlResponse>(serviceImpl.GetGoogleLoginUrl));
      serviceBinder.AddMethod(__Method_HandleGoogleCallback, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackRequest, global::Chatly.OmniChannel.Gmail.GServices.GoogleCallbackResponse>(serviceImpl.HandleGoogleCallback));
      serviceBinder.AddMethod(__Method_GetAllSessions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Chatly.OmniChannel.Gmail.GServices.Empty, global::Chatly.OmniChannel.Gmail.GServices.GmailAccountSessionListResponse>(serviceImpl.GetAllSessions));
    }

  }
}
#endregion
